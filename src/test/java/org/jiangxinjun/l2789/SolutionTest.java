package org.jiangxinjun.l2789;

import com.alibaba.fastjson2.JSON;
import com.alibaba.fastjson2.JSONArray;
import org.apache.commons.io.FileUtils;
import org.junit.Assert;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;

public class SolutionTest {

    @Test
    public void test() throws IOException, URISyntaxException {
        Solution solution = new Solution();
        long maxArrayValue = solution.maxArrayValue(new int[]{2, 3, 7, 9, 3});
        Assert.assertEquals(21L, maxArrayValue);
        long maxArrayValue2 = solution.maxArrayValue(new int[]{5,3,3});
        Assert.assertEquals(11L, maxArrayValue2);
        long maxArrayValue3 = solution.maxArrayValue(new int[]{77});
        Assert.assertEquals(77L, maxArrayValue3);
        long maxArrayValue4 = solution.maxArrayValue(new int[]{34,95,50,12,25,100,21,3,25,16,76,73,93,46,18});
        Assert.assertEquals(623L, maxArrayValue4);
        long maxArrayValue5 = solution.maxArrayValue(new int[]{40,15,35,98,77,79,24,62,53,84,97,16,30,22,49});
        Assert.assertEquals(781L, maxArrayValue5);
        long maxArrayValue6 = solution.maxArrayValue(new int[]{1440,4458,6601,3833,9513,3188,9567,1107,217,13,1359,8825,7896,3007,3426,5057,3477,2814,1446,4213,2327,9241,819,9839,5971,9449,7360,8810,2134,5024,7879,6316,9768,5739,4094,6584,6372,6298,3609,7813,3317,7322,8730,9561,314,7026,9748,7672,7663,7888,5213,3566,4823,2226,3015,9003,4316,1920,439,8931,8186,9192,5605,4075,5,5736,956,9337,608,8182,4608,6421,1283,5867,8300,3225,6385,793,5282,5526,115,5819,7572,7087,3737,3362,5158,3426,5999,3352,3229,7158,9030,2129,7508,5142,4831,818,9918,9010,8075,2504,8946,6646,8745,6904,1727,9952,4361,6147,6481,3890,7729,4910,2327,4428,7726,96,9891,1488,4879,1405,2731,3418,1191,2229,1199,8360,6346,7145,792,6970,6601,9632,9936,5566,2449,1651,1265,3271,186,9858,3635,9941,5489,6267,9444,1396,1205,6917,1281,3817,42,2649,9008,7502,8349,7775,4959,1102,8131,9084,8993,8439,3407,7868,2811,1098,4342,661,7547,1563,5686,6536,4647,514,1684,6557,8224,1222,7052,6764,565,8232,3666,5316,8317,3365,2282,2511,9678,5015,4591,3774,8891,1187,8076,5479,1677,5906,166,9163,9179,7575,3447,9667,3846,3461,8354,319,2628,9592,8604,1291,8586,1370,98,794,7758,1762,8512,7266,5634,7520,5470,6085,8357,460,4132,8180,895,4896,970,4779,1528,1557,5939,3014,6448,4031,4437,1070,6035,179,4396,5478,3388,6976,9981,9794,6345,4427,8805,1424,5713,2486,8592,2625,3682,2616,5841,5191,7931,8040,1617,8704,6205,5163,1019,4770,6544,5001,7455,9094,2993,9812,2269,7080,171,1751,6818,3080,5104,970,7336,8868,4060,6610,4424,7273,6405,3522,7593,2230,9679,2156,5308,3013,4649,5753,8190,8934,7165,3217,5885,9753,6106,5477,5444,2588,5218,400,635,3110,6101,5199,7857,2887,9841,1876,1273,2400,4390,4818,8281,2679,5320,581,2225,861,1081,3631,1316,558,2257,604,6133,2749,1271,7958,5302,743,5427,7120,8395,8287,4587,9711,5185,3470,448,6522,2288,2748,7977,1986,1160,3192,3326,6814,2509,4909,80,1272,7729,7357,2865,5530,5061,925,450,6013,5403,2924,7034,4960,3908,2887,8473,1551,8601,2590,490,2607,1379,4054,8203,7979,9650,8460,847,1096,4321,3160,3449,567,6069,5076,110,4516,5306,1829,9768,8943,2873,7579,6653,2858,7808,612,3141,276,8819,3903,6990,8479,8702,4111,7376,5508,8555,6983,2454,9153,9545,4293,3351,932,2635,6971,8275,2976,808,4103,8691,3519,2575,8545,4767,1355,6141,6403,6530,6937,5620,2929,4197,7843,5055,8379,2761,3556,8962,7338,7257,2692,356,4216,7331,2038,8533,1095,2020,1867,2420,9738,7209,5326,6136,3272,8672,1332,7940,1163,1454,278,8607,2208,5254,6079,4424,7240,1338,1604,4445,7037,3194,9185,2149,8653,1616,1586,4577,6154,9123,1199,5532,8044,1005,1345,4714,2004,4864,1518,6080,1364,7956,8864,1324,7400,158,784,5821,393,9722,5458,3428,3974,6556,633,8009,445,910,4127,77,9935,6488,8034,7731,9283,4567,9582,9045,7429,4041,1541,9147,8729,5863,9340,9659,4607,818,7875,3172,5132,5318,4696,8634,4126,6461,6332,7388,309,684,8418,9075,500,4350,3179,3985,293,8154,1240,8841,1195,5473,6980,831,7400,4426,9841,2089,393,9303,2911,9417,6180,1094,900,9893,5143,4995,5809,6882,9328,4319,3599,2020,1129,2079,3705,6661,6347,4209,4296,1718,3513,3567,1276,2118,5744,4780,8169,3321,3,9125,70,6960,855,3787,2791,9188,9373,4504,2916,8888,2482,5336,7981,1476,4422,6392,2035,9405,2013,3342,7485,5147,2666,2593,3973,7515,6780,1110,6485,5565,3494,7583,1181,5362,5190,9303,1680,2527,5308,4670,6436,6456,1526,5331,4034,9472,7000,5968,4566,9764,5449,628,8525,3581,9775,1636,4168,4,7753,4097,5752,8808,3976,7079,3698,3938,7690,2040,5661,1159,2765,8746,8457,7219,1181,9576,4039,7888,6605,1032,6876,7869,1077,5883,1447,4269,1729,9677,4190,2794,5841,50,7786,57,8791,8263,4907,152,3318,702,6323,6160,8026,214,4244,5477,9023,5617,2475,4413,9082,6913,7196,6147,735,4808,8644,313,4596,7730,5371,9248,8757,6112,1591,9039,5340,1498,5265,4415,3220,4197,9355,5427,7295,5786,2692,9105,8174,4416,9009,3953,7982,8105,2044,9135,8266,6156,6155,1663,4368,5574,6123,5129,5956,5728,3764,8526,298,4850,7653,426,6675,4860,2647,8656,5591,602,2913,530,378,8946,4456,2835,4291,9487,4974,2672,6939,5476,7166,8371,833,7738,4261,4788,6940,1243,9704,9861,2153,8639,5833,3103,3173,428,9645,6547,1053,815,291,3466,2688,719,4826,5875,9129,3526,9251,2421,3983,218,787,1739,2692,832,2837,6005,8643,7083,720,9157,5693,4491,5464,9575,2666,7788,340,6493,6553,5547,3364,8516,6945,4396,7248,5450,6044,9534,9295,2526,821,9629,7213,2107,5700,2639,139,6524,3032,1396,7844,769,8127,2257,8016,6225,9776,2894,8988,8570,8978,7808,1406,3395,8185,7760,849,9251,8866,2355,6677,7515,7251,6716,1663,4595,4217,4142,7569,3010,5168,2193,5014,2706,5202,7052,8918,4029,6470,5404,7718,7175,9216,7750,6605,7387,9282,401,2018,6904,1767,99,4248,2834,7801,8500,7263,2953,9779,6730,1407,6202,1590,9947,3125,1019,3182,1572});
        Assert.assertEquals(4603376L, maxArrayValue6);
        String aryStr = FileUtils.readFileToString(new File(this.getClass().getResource("/l2789/test.json").toURI()));
        JSONArray objects = JSON.parseArray(aryStr);
        long maxArrayValue7 = solution.maxArrayValue(objects.stream().mapToInt(v -> (Integer) v).toArray());
        Assert.assertEquals(4713565309L, maxArrayValue7);
    }
}


//leetcode submit region end(Prohibit modification and deletion)
